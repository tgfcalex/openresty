
#user  nobody;
user root root;
#worker_processes 1;
worker_processes  auto;
worker_cpu_affinity auto;
error_log       /var/log/nginx/error.log  error;


#pid        logs/nginx.pid;
pid        /var/log/nginx/nginx.pid;
worker_rlimit_nofile 65535;
worker_rlimit_core 0;
#events {
#    worker_connections  1024;
#}
events {
    use epoll;
    worker_connections  65535;
}

# Enables the use of JIT for regular expressions to speed-up their processing.
pcre_jit on;


#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;


http {
    include       mime.types;
    default_type  application/octet-stream;
        charset  utf-8;
        log_not_found   off; #開啟或者禁用記錄http404錯誤
    # Enables or disables the use of underscores in client request header fields.
    # When the use of underscores is disabled, request header fields whose names contain underscores are marked as invalid and become subject to the ignore_invalid_headers directive.
    # underscores_in_headers off;

#    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
#                      '$status $body_bytes_sent "$http_referer" '
#                      '"$http_user_agent" "$http_x_forwarded_for"';

    log_format main '[$time_local] $status $X_system $remote_addr | $http_x_forwarded_for |' 
                    ' $request_time | $upstream_response_time "[$upstream_addr $upstream_cache_status]" '
                    '"$request_method $scheme://$host:$server_port$request_uri $server_protocol '
                    '/ $body_bytes_sent" "$http_user_agent"';


    access_log /var/log/nginx/access.log  main;
        # Log in JSON Format
        # log_format nginxlog_json escape=json '{ "timestamp": "$time_iso8601", '
        # '"remote_addr": "$remote_addr", '
        #  '"body_bytes_sent": $body_bytes_sent, '
        #  '"request_time": $request_time, '
        #  '"response_status": $status, '
        #  '"request": "$request", '
        #  '"request_method": "$request_method", '
        #  '"host": "$host",'
        #  '"upstream_addr": "$upstream_addr",'
        #  '"http_x_forwarded_for": "$http_x_forwarded_for",'
        #  '"http_referrer": "$http_referer", '
        #  '"http_user_agent": "$http_user_agent", '
        #  '"http_version": "$server_protocol", '
        #  '"nginx_access": true }';
        # access_log /dev/stdout nginxlog_json;
    set_real_ip_from 173.245.48.0/20; #Cloudflare IP Ranges
    set_real_ip_from 103.21.244.0/22;
    set_real_ip_from 103.22.200.0/22;
    set_real_ip_from 103.31.4.0/22;
    set_real_ip_from 141.101.64.0/18;
    set_real_ip_from 108.162.192.0/18;
    set_real_ip_from 190.93.240.0/20;
    set_real_ip_from 188.114.96.0/20;
    set_real_ip_from 197.234.240.0/22;
    set_real_ip_from 198.41.128.0/17;
    set_real_ip_from 162.158.0.0/15;
    set_real_ip_from 104.16.0.0/12;
    set_real_ip_from 172.64.0.0/13;
    set_real_ip_from 131.0.72.0/22; #Cloudflare IP Ranges
    # See Move default writable paths to a dedicated directory (#119)
    # https://github.com/openresty/docker-openresty/issues/119
    client_body_temp_path /var/run/openresty/nginx-client-body;
    proxy_temp_path       /var/run/openresty/nginx-proxy;
    fastcgi_temp_path     /var/run/openresty/nginx-fastcgi;
    uwsgi_temp_path       /var/run/openresty/nginx-uwsgi;
    scgi_temp_path        /var/run/openresty/nginx-scgi;

    server_names_hash_bucket_size  256; #哈希表的存儲桶大小
    client_header_buffer_size     256k; #客戶端請求標頭的緩衝區大小
    large_client_header_buffers 4 256k; #請求標頭的最大值number和size緩衝區
    reset_timedout_connection       on; #啟用或禁用重置超時連接
    client_max_body_size               50m; #設置客戶端請求正文的最大允許大小
    client_header_timeout           10; #客戶端請求標頭的超時
    client_body_timeout             10; #讀取客戶端請求正文的超時
    send_timeout                    10; #響應傳輸到客戶端的超時時間
    keepalive_timeout              30s; #第一個參數設置超時
    keepalive_requests             100; #置可以通過一個保持活動連接服務的最大請求數
    sendfile                        on;
    tcp_nodelay                     on; #當連接轉換為保持活動狀態時，將啟用該選項。此外，它在SSL連接，無緩衝代理和WebSocket代理上啟用。
    tcp_nopush                      on; #僅在使用sendfile時啟用這些選項。啟用該選項可以
    server_tokens                  off; #在錯誤頁面和“服務器”響應標題字段中啟用或禁用發射Nginx版本。

    #如果被代理服务器返回的状态码为400或者大于400，设置的error_page配置起作用。默认为off。 -- by Tim 2018/06/04
    fastcgi_intercept_errors        on;
    gzip                            on;
    gzip_min_length                 2k;
    gzip_comp_level                  6;
    gzip_buffers                 4 32k;
    gzip_types text/xml application/x-javascript text/javascript application/javascript;
    gzip_types text/plain text/css application/xml application/x-httpd-php image/jpeg image/gif image/png text/js application/json;
    gzip_http_version              1.1;
    gzip_proxied                   any;
    gzip_vary                       on;
    gzip_disable         "MSIE [1-6].";

    #設置緩存的路徑和其他參數
    proxy_cache_path /tmp/proxy_cache levels=1:2 keys_zone=cache_zone:100m inactive=1d max_size=7g use_temp_path=off;
    proxy_ignore_headers          Vary; #禁用來自代理服務器的某些響應頭字段

    client_body_buffer_size        50m; #客戶端請求正文的緩衝區大小
    proxy_connect_timeout           70; #與代理服務器建立連接的超時，此設定不能超過75秒
    proxy_read_timeout              70; #代理服務器讀取響應的超時
    proxy_send_timeout              70; #將請求傳輸到代理服務器的超時
    proxy_buffer_size             128k; #設置size用於讀取從代理服務器接收到的響應的第一部分的緩衝區的
    proxy_buffers               16 50m; #單個連接 設置用於從代理服務器讀取響應的緩衝區的number和size
    proxy_busy_buffers_size        50m; #當緩衝啟用從代理的服務器響應，限制總size的緩衝區
    proxy_temp_file_write_size   1024m; #size當啟用了從代理服務器到臨時文件的響應的緩衝
    proxy_ignore_client_abort      on;  #當客戶端關閉連接而不等待響應時是否關閉與代理服務器的連接
    proxy_headers_hash_max_size   1024; #哈希表的最大值
    proxy_headers_hash_bucket_size 128; #size使用的哈希表的存儲桶
    proxy_redirect                 off; #設置應在代理服務器響應的“位置”和“刷新”標頭字段中更改的文本
#    proxy_set_header Web-Server-Type  nginx;
    proxy_next_upstream error timeout invalid_header http_502 http_503 http_504;
    proxy_cache_key       '$scheme$host$request_uri';

    open_file_cache max=100000 inactive=20s;
    open_file_cache_valid          30s; #
    open_file_cache_min_uses         2; #
    open_file_cache_errors          on; #


#    include /etc/nginx/conf.d/*.conf;
    include /usr/local/openresty/nginx/conf/conf.d/https.conf;
    include /usr/local/openresty/nginx/conf/conf.d/upstream.conf;
    include /usr/local/openresty/nginx/conf/conf.d/server.conf;
    include /usr/local/openresty/nginx/conf/conf.d/proxy.conf;
    # Don't reveal OpenResty version to clients.
}
